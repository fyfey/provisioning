kind: Deployment
apiVersion: apps/v1
metadata:
  name: docker-registry
  labels:
    app: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      volumes:
        - name: config
          configMap:
            name: docker-registry
            items:
              - key: registry-config.yml
                path: config.yml
        - name: htpasswd
          secret:
            secretName: docker-registry
            items:
              - key: HTPASSWD
                path: htpasswd
        - name: storage
          persistentVolumeClaim:
            claimName: registry
      containers:
        - name: docker-registry
          image: registry:2.6.2
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/docker/registry
              readOnly: true
            - name: htpasswd
              mountPath: /auth
              readOnly: true
            - name: storage
              mountPath: /var/lib/registry
---
kind: Service
apiVersion: v1
metadata:
  name: docker-registry
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
  selector:
    app: docker-registry
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: docker-registry
  annotations:
    cert-manager.io/cluster-issuer: issuer-prod
    # kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  tls:
    - hosts:
        - docker.fyfe.io
      secretName: registry-prod-secret
  ingressClassName: nginx
  rules:
    - host: docker.fyfe.io
      http:
        paths:
          - pathType: ImplementationSpecific
            backend:
              service:
                name: docker-registry
                port:
                  number: 5000
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: docker-registry
data:
  registry-config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    auth:
      htpasswd:
        realm: basic-realm
        path: /auth/htpasswd
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: registry
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 20Gi
---
kind: Certificate
apiVersion: cert-manager.io/v1
metadata:
  name: registry-prod
  namespace: default
spec:
  secretName: registry-prod-secret
  issuerRef:
    name: issuer-prod
    kind: ClusterIssuer
  commonName: docker.fyfe.io
  dnsNames:
    - docker.fyfe.io
---
kind: Secret
apiVersion: v1
metadata:
  name: docker-registry
type: Opaque
data:
  HTPASSD: "{{ (lookup('env', 'REGISTRY_USERNAME') + ':' + lookup('env', 'REGISTRY_PASSWORD') | password_hash("blowfish") | regex_replace('\\$2b\\$', '$2y$') ) | b64encode }}"
